// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestFindVacancyTestAutomationEngineerTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void testFindVacancyTestAutomationEngineer() {
    driver.get("https://ctco.lv/");
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.id("navbarCollapse")));
    }
    assertThat(driver.getTitle(), is("C.T.Co People"));
    driver.manage().window().setSize(new Dimension(1936, 1056));
    assertThat(driver.findElement(By.cssSelector("#menu-item-127 > .reload-page")).getText(), is("CAREERS"));
    driver.findElement(By.cssSelector(".table-cell-display > .text-block > h1")).click();
    driver.findElement(By.cssSelector("#menu-item-127 > .reload-page")).click();
    assertThat(driver.getTitle(), is("Careers | C.T.Co People"));
    driver.findElement(By.cssSelector(".col-sm-12:nth-child(1) h1")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 30);
      wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".table-cell-display > .text-block > h1")));
    }
    assertThat(driver.getTitle(), is("Vacancies | C.T.Co People"));
    driver.findElement(By.linkText("Test Automation Engineer")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("#menu-item-3249 > .menu-link"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    assertThat(driver.findElement(By.linkText("Test Automation Engineer")).getText(), is("Test Automation Engineer"));
    driver.findElement(By.cssSelector(".col-sm-12:nth-child(1) h1")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//p[contains(.,\'Professional skills and qualification:\')]/following-sibling::p[contains(.,\'REST Assured\')]"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//p[contains(.,\'Professional skills and qualification:\')]/following-sibling::p[contains(.,\'Good level in English reading /speaking /writing\')]"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//p[contains(.,\'Professional skills and qualification:\')]/following-sibling::p[contains(.,\' communication skills\')]"));
      assert(elements.size() > 0);
    }
  }
}
