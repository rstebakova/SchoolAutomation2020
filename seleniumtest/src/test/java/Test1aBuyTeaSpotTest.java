// Generated by Selenium IDE

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

import java.util.HashMap;
import java.util.Map;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Test1aBuyTeaSpotTest {

    private WebDriver driver;

    private Map<String, Object> vars;

    JavascriptExecutor js;

    @Before
    public void setUp() {

        System.setProperty("webdriver.gecko.driver", "C:\\srdev\\geckodriver.exe");
        driver = new FirefoxDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void test1aBuyTeaSpot() {
        driver.get("https://www.1a.lv/");
        driver.manage().window().setSize(new Dimension(1666, 956));
        {
            WebElement element = driver.findElement(By.cssSelector(".logo img"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.tagName("body"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element, 0, 0).perform();
        }
        assertThat(driver.getTitle(), is("Lielākais interneta veikals Latvijā - www.1a.lv"));
        vars.put("banner", driver.findElements(By.xpath("//div[@class=\'modal-dialog\']")).size());
        if ((Boolean) js.executeScript("return ($(banner)>0)")) {
            driver.findElement(By.cssSelector(".close-button")).click();
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, 30);
            wait.until(ExpectedConditions.presenceOfElementLocated(By.id("new-header")));
        }
        vars.put("items", driver.findElement(By.cssSelector(".items")).getText());
        if ((Boolean) js.executeScript("return ($(items)>0)")) {
            driver.findElement(By.id("main")).click();
            driver.findElement(By.cssSelector(".items")).click();
            driver.findElement(By.cssSelector(".empty > strong")).click();
            driver.findElement(By.linkText("Iztīrīt pirkumu grozu")).click();
            assertThat(driver.findElement(By.cssSelector(".empty > strong")).getText(), is("Pirkumu grozā nav nevienas preces"));
        }
        driver.findElement(By.id("search_products_text_field")).click();
        driver.findElement(By.id("search_products_text_field")).sendKeys("tea pot");
        driver.findElement(By.id("search_products_text_field")).sendKeys(Keys.ENTER);
        js.executeScript("window.scrollTo(0,0)");
        {
            WebElement element = driver.findElement(By.cssSelector("#search-category-image-grid > .ait-search-result-image-box:nth-child(2) > " +
                    ".ait-search-result-title"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.tagName("body"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element, 0, 0).perform();
        }
        {
            WebElement element = driver.findElement(By.linkText("Tējkannas (ar svilpi)"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.tagName("body"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element, 0, 0).perform();
        }
        driver.findElement(By.cssSelector("#search-category-image-grid > .ait-search-result-image-box:nth-child(2) > .ait-search-result-title"))
                .click();
        {
            WebElement element = driver.findElement(By.cssSelector(".title-link > .items"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        assertThat(driver.findElement(By.cssSelector(".ait-search-result-count > span")).getText(), is("2"));
        driver.findElement(By.cssSelector(".same-height-left .button > span")).click();
        {
            WebElement element = driver.findElement(By.cssSelector("#wishlist-header-container .title"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        driver.findElement(By.cssSelector(".title-link > .items")).click();
        {
            WebElement element = driver.findElement(By.cssSelector(".items"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            WebElement element = driver.findElement(By.tagName("body"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element, 0, 0).perform();
        }
        assertThat(driver.findElement(By.cssSelector(".items")).getText(), is("1"));
        driver.close();
    }
}
